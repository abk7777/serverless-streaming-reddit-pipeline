AWSTemplateFormatVersion: 2010-09-09
Description: "Deploys resources for data lake"
Parameters:
  AppName:
    Type: String
  AppVersion:
    Type: String
  Stage:
    Type: String
  DataBucketArn:
    Type: String
  DataBucketName:
    Type: String
  GlueScriptsBucketName:
    Type: String
  GlueScriptsBucketArn:
    Type: String
Resources:
  RedditPipelineGlueRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref Stage
          - !Ref AppName
          - !Ref AppVersion
          - !Ref AWS::Region
          - GlueServiceRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: !Join
          - '-'
          - - !Ref Stage
            - !Ref AppName
            - !Ref AppVersion
            - !Ref AWS::Region
            - GlueServicePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource: 
                  - !Ref DataBucketArn
                  - !Join
                    - ""
                    - - !Ref DataBucketArn
                      - "/*" 
                  - !Ref GlueScriptsBucketArn
                  - !Join
                    - ""
                    - - !Ref GlueScriptsBucketArn
                      - "/*" 
  RedditPipelineDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Join 
          - '-'
          - - !Ref Stage
            - !Ref AppName
            - !Ref AppVersion
            - database
  SubredditsRawJSONCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Join 
        - '-'
        - - !Ref Stage
          - !Ref AppName
          - !Ref AppVersion
          - !Ref AWS::Region
          - subreddits-raw-json-crawler
      Role: !GetAtt RedditPipelineGlueRole.Arn
      Targets:
        S3Targets:
          - Path: !Join ['', [s3://, !Ref DataBucketName, /data/raw_reddit_posts_json]]
      DatabaseName: !Ref RedditPipelineDatabase
      TablePrefix: !Join ['_', [!Ref Stage, 'ssrp', !Ref AppVersion, '']]
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
      Schedule:
        ScheduleExpression: cron(0 3/12 * * ? *)
  JSONToParquetETLJob:
    Type: AWS::Glue::Job
    Properties:
      Name: !Join 
        - '-'
        - - !Ref Stage
          - !Ref AppName
          - !Ref AppVersion
          - !Ref AWS::Region
          - json-to-parquet-etl
      Role: !GetAtt RedditPipelineGlueRole.Arn
      GlueVersion: '2.0'
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Sub "s3://${GlueScriptsBucketName}/glue_scripts/json_to_parquet.py"
      DefaultArguments: {
          "--s3_output_path": !Sub "s3://${DataBucketName}/data/raw_reddit_posts_parquet",
          "--source_glue_database": !Ref RedditPipelineDatabase,
          "--source_glue_table": !Join ['_', [!Ref Stage, 'ssrp', !Ref AppVersion, 'raw_reddit_posts_json']],
          "--job-bookmark-option": "job-bookmark-enable"
          # "--enable-spark-ui": "true",
          # "--spark-event-logs-path": !Sub "s3://${LogBucketName}/glue-etl-jobs/"  <---- Need to create log bucket
      }
      Description: "Convert raw JSON subreddit data to Parquet"
      WorkerType: Standard
      NumberOfWorkers: 2
      ExecutionProperty:
        MaxConcurrentRuns: 2
      MaxRetries: 0
      Timeout: 30
  SubredditRawParquetCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Join 
        - '-'
        - - !Ref Stage
          - !Ref AppName
          - !Ref AppVersion
          - !Ref AWS::Region
          - subreddits-raw-parquet-crawler
      Role: !GetAtt RedditPipelineGlueRole.Arn
      Targets:
        S3Targets:
          - Path: !Join ['', [s3://, !Ref DataBucketName, /data/raw_reddit_posts_parquet]]
      DatabaseName: !Ref RedditPipelineDatabase
      TablePrefix: !Join ['_', [!Ref Stage, 'ssrp', !Ref AppVersion, '']]
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
      # Schedule:
      #   ScheduleExpression: cron(0 3/12 * * ? *)
Outputs:
  SubredditsRawJSONCrawler:
    Description: Subreddit raw JSON data crawler
    Value: !Ref SubredditsRawJSONCrawler
    Export:
      Name: !Sub "${AWS::StackName}-SubredditsRawJSONCrawler"
  SubredditRawParquetCrawler:
    Description: Subreddit raw Parquet data crawler
    Value: !Ref SubredditRawParquetCrawler
    Export:
      Name: !Sub "${AWS::StackName}-SubredditRawParquetCrawler"
  StackName:
    Description: StackName
    Value: !Sub ${AWS::StackName}